upstream app {
    server app:8000;
}

# portal
server {

    listen 80;

    location / {
        proxy_pass https://app/;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Host $host;
        proxy_redirect off;

        add_header 'Access-Control-Allow-Origin' '*';
        add_header 'Access-Control-Allow-Credentials' 'true';
        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, DELETE';
        add_header 'Access-Control-Allow-Headers' 'DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Authorization';
    }

    server_name localhost;
}

server {
    listen 443 ssl;
    server_name blackemployer.com;

    ssl_certificate /etc/ssl/blackemployer.com.crt;
    ssl_certificate_key /etc/ssl/blackemployer.com.key;

    ssl_session_cache   shared:SSL:10m;
    ssl_session_timeout 10m;
    keepalive_timeout 70;

    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
    ssl_prefer_server_ciphers on;

    ssl_stapling on;
    ssl_trusted_certificate /etc/ssl/ca.crt;
    resolver 8.8.8.8;

    # DDoS protection
    client_body_timeout 5s;
    client_header_timeout 5s;

#     rewrite ^(.*) https://www.blackemployer.com$1 permanent;
#     include /etc/letsencrypt/options-ssl-nginx.conf;
#     ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;
}


# http {
#     # what times to include
#     include       /etc/nginx/mime.types;
#     # what is the default one
#     default_type  application/octet-stream;
#
#     # Sets the path, format, and configuration for a buffered log write
#     log_format compression '$remote_addr - $remote_user [$time_local] '
#         '"$request" $status $upstream_addr '
#         '"$http_referer" "$http_user_agent"';
#
#     server {
#         listen 80;
#         access_log /var/log/nginx/access.log compression;
#
#         # where the root here
# #         root /var/www;
#         # what file to server as index
# #         index index.html index.htm;
#
#         location / {
#             # First attempt to serve request as file, then as directory, then fall back to redirecting to index.html
#             try_files $uri $uri/ /index.html;
#         }
#
#         # Media: images, icons, video, audio, HTC
#         location ~* \.(?:jpg|jpeg|gif|png|ico|cur|gz|svg|svgz|mp4|ogg|ogv|webm|htc)$ {
# #           expires 1M;
#           access_log off;
#           add_header Cache-Control "public";
#         }
#
#         # Javascript and CSS files
#         location ~* \.(?:css|js)$ {
#             try_files $uri =404;
# #             expires 1y;
#             access_log off;
#             add_header Cache-Control "public";
#         }
#
#         # Any route containing a file extension (e.g. /devicesfile.js)
#         location ~ ^.+\..+$ {
#             try_files $uri =404;
#         }
#     }
# }


# # auto detects a good number of processes to run
# worker_processes auto;
#
# #Provides the configuration file context in which the directives that affect connection processing are specified.
# events {
#     # Sets the maximum number of simultaneous connections that can be opened by a worker process.
#     worker_connections 8000;
#     # Tells the worker to accept multiple connections at a time
#     multi_accept on;
# }