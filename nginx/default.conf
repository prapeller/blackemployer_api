upstream app {
    server app:8000;
}

# portal
server {

    listen 80;
    listen 443 ssl;

    server_name         www.blackemployer.com;
    ssl_certificate /etc/ssl/blackemployer.com.crt;
    ssl_certificate_key /etc/ssl/blackemployer.com.key;
    ssl_protocols       TLSv1 TLSv1.1 TLSv1.2;
    ssl_ciphers         HIGH:!aNULL:!MD5;

    ssl_session_cache   shared:SSL:10m;
    ssl_session_timeout 10m;
    keepalive_timeout 70;

    ssl_stapling on;
    ssl_trusted_certificate /etc/ssl/ca.crt;
    resolver 8.8.8.8;

#   DDoS protection
    client_body_timeout 5s;
    client_header_timeout 5s;

    location / {
        proxy_pass http://app;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Host $host;
        proxy_redirect off;

        add_header 'Access-Control-Allow-Origin' '*';
        add_header 'Access-Control-Allow-Credentials' 'true';
        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, DELETE';
        add_header 'Access-Control-Allow-Headers' 'DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Authorization';
    }

    location /favicon.ico {
        access_log off;
        log_not_found off;
    }

    location /static/ {
        alias /static/;
    }
    location /media/ {
        alias /static/media/;
    }

#   !FUUUUUUUUUUUUUUUUUCK!!!!!! Any route containing a file extension (e.g. /devicesfile.js)
#     location ~ ^.+\..+$ {
#          try_files $uri =404;
#     }
}

server {
    listen 80;
    server_name blackemployer.com;
    return 301 https://$host$request_uri;
}

# #Provides the configuration file context in which the directives that affect connection processing are specified.
# events {
#     # Sets the maximum number of simultaneous connections that can be opened by a worker process.
#     worker_connections 8000;
#     # Tells the worker to accept multiple connections at a time
#     multi_accept on;
# }
